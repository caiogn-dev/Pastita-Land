services:
  db:
    image: postgres:16
    container_name: pastita_postgres
    environment:
      POSTGRES_USER: pastita
      POSTGRES_PASSWORD: pastita
      POSTGRES_DB: pastita
    ports:
      - "5432:5432"        # opcional: remova se não precisar acessar de fora
    volumes:
      - ./_data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pastita -d pastita"]
      interval: 5s
      timeout: 3s
      retries: 10

  web:
    build:
      context: .
      target: deps
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: "1"
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
      DATABASE_URL: "postgresql://pastita:pastita@db:5432/pastita?schema=public"
    ports:
      - "3001:3000"        # host 3001 -> container 3000 (evita conflito com 3000)
      - "5555:5555"        # opcional: Prisma Studio
    volumes:
      - .:/app
      - node_modules_cache:/app/node_modules
    command: |
      sh -lc '
        if [ ! -f node_modules/.bin/next ]; then
          echo "[web] node_modules vazio — instalando deps...";
          npm ci || npm install --no-audit --no-fund;
        fi;
        echo "[web] iniciando Next em 0.0.0.0:3000";
        npx next dev -p 3000 -H 0.0.0.0
      '

volumes:
  node_modules_cache: {}
