// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Marcas / menus (ex.: Pastita, Agrião). Use 'slug' para /cardapio/{slug}
model Menu {
  id         String         @id @default(cuid())
  name       String
  slug       String         @unique           // "pastita" | "agriao"
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  categories MenuCategory[]

  @@index([slug])
}

/// Categoria dentro de um Menu (ex.: "Linha Fit", "Gourmet Fit")
model MenuCategory {
  id         String      @id @default(cuid())
  title      String
  slug       String
  sortOrder  Int         @default(0)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  // Relação com Menu
  menuId String
  menu   Menu       @relation(fields: [menuId], references: [id], onDelete: Cascade)

  items  MenuItem[]

  @@unique([menuId, slug])         // slug único por menu
  @@index([menuId, sortOrder])
}

/// Item do cardápio (ex.: "Escondidinho de Abóbora com Frango")
model MenuItem {
  id           String     @id @default(cuid())
  name         String
  slug         String                         // seu "id" legível: escondidinho-abobora-frango
  description  String?
  imageUrl     String?
  // preço em centavos para evitar problemas de ponto flutuante
  priceCents   Int
  // tags simples como array de texto (PostgreSQL)
  tags         String[]   @default([])

  isActive     Boolean    @default(true)
  sortOrder    Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  // Relação com Categoria
  categoryId String
  category   MenuCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([categoryId, slug])     // slug único dentro da categoria
  @@index([categoryId, sortOrder])
}
